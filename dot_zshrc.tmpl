. "$HOME/.local/bin/env"
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"

plugins=(
  git
  zsh-autosuggestions
  zsh-completions
  zsh-syntax-highlighting
)

# completions
fpath=(~/.zsh/completions $fpath)
autoload -Uz compinit
compinit

source $ZSH/oh-my-zsh.sh

# >>> juliaup initialize >>>

# !! Contents within this block are managed by juliaup !!

path=('/Users/jlperla/.juliaup/bin' $path)
export PATH

# <<< juliaup initialize <<<

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Shell completions
eval "$(uv generate-shell-completion zsh)"
eval "$(uvx --generate-shell-completion zsh)"

# Moving here since not used by the AIs shell?
eval "$(/opt/homebrew/bin/brew shellenv)"

# Activate virtualenv if interactive shell and in a project directory
if [[ $- == *i* ]]; then
  [ -f ".venv/bin/activate" ] && source .venv/bin/activate 2>/dev/null
fi

{{- $cfgdir := .chezmoi.configDir -}}
{{- if (stat (joinPath $cfgdir "chezmoi.local.toml")).exists -}}
  {{- $cfg := fromToml (readFile (joinPath $cfgdir "chezmoi.local.toml")) -}}
  {{- with $cfg.data.openai_api_key }}
export OPENAI_API_KEY="{{ . }}"
  {{- end }}
{{- else if (stat (joinPath $cfgdir "chezmoi.local.yaml")).exists -}}
  {{- $cfg := fromYaml (readFile (joinPath $cfgdir "chezmoi.local.yaml")) -}}
  {{- with $cfg.data.openai_api_key }}
export OPENAI_API_KEY="{{ . }}"
  {{- end }}
{{- end }}